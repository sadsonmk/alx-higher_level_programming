>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1,2,3], [4,5,6]]

>>> matrix_divided(matrix, 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 34, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, 'hello')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number

>>> matrix = [['b',4,5],[9.0,8,7]]
>>> matrix_divided(matrix, 100)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 30, in matrix_divided
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> matrix_divided(matrix, 8)
[]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 34, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
